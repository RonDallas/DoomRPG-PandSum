Class DRLAX_ClassEvents : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		String r;

		if(skill == 7 && !Cvar.GetCvar("DRLAX_brokenadaptivemasterminds").GetBool())
		{
			r = "RLSpiderMastermind";
			if(e.replacee == r)
			{
				string s;
				uint r = random(0, 14);

				if(r >= 2 && r <= 5)
				{
					s = "RLSpiderMastermindBFG";
				}
				if(r <= 1)
				{
					s = "RLSpiderMastermindMortar";
				}

				e.replacement = s;
			}
		}
	}

	override void WorldThingSpawned (WorldEvent e)
	{	
		if(!e.Thing)
		{
			return;
		}

		String clsn = e.Thing.GetClassName();

		DRLAX_PitGuardian p = DRLAX_PitGuardian(e.Thing);
		if(p && !p.statuespawn && !p.CheckRange(300))
		{
			p.Destroy();
			return;
		}
		
		DRLAX_StatueSummoningRitual s = DRLAX_StatueSummoningRitual(e.Thing);
		if(s && !s.statue)
		{
			s.Destroy();
			return;
		}

		DRLAX_DemonStatueObject g = DRLAX_DemonStatueObject(e.Thing);
		{
			if(g && !g.CheckRange(128))
			{
				//Console.Printf("eek!");
				g.Destroy();
				return;
			}
		}

		if(clsn == "RLDeVileCopyDelay")
		{
			String c;

			if(e.Thing.master)
			{
				bool spawned = false;
				if(e.Thing.master.GetClassName() == "DoomRLMechanoid")
				{
					c = "RLDeVileCopyDelay_Mechanoid";
					spawned = true;
				}
				
				if(e.Thing.master.GetClassName() == "DoomRLNomad")
				{
					c = "RLDeVileCopyDelay_Nomad";
					spawned = true;
				}

				if(e.Thing.master.GetClassName() == "DoomRLNanoManiac")
				{
					c = "RLDeVileCopyDelay_NanoManiac";
					spawned = true;
				}

				if(e.Thing.master.GetClassName() == "DoomRLPhaseSisters")
				{
					c = "RLDeVileCopyDelay_PhaseSisters";
					spawned = true;
				}	

				if(e.Thing.master.GetClassName() == "DoomRLSarge")
				{
					c = "RLDeVileCopyDelay_Sarge";
					spawned = true;
				}	

				if(e.Thing.master.GetClassName() == "DoomRLTrespasser")
				{
					c = "RLDeVileCopyDelay_Trespasser";
					spawned = true;
				}	

				if(e.Thing.master.GetClassName() == "DoomRLBunker")
				{
					c = "RLDeVileCopyDelay_Bunker";
					spawned = true;
				}	

				if(spawned)
				{
					e.Thing.A_SpawnItemEx(c, flags:SXF_TRANSFERPOINTERS);
					e.Thing.Destroy();
					return;
				}			
			}
		}

		if(clsn == "RLDeadBodySpawner" && random(0, 22) == 0 && !BodySpawned() && !Cvar.GetCvar("DRLAX_nonewplayercorpses").GetBool())
		{
			e.Thing.Spawn("DRLAX_DeadBody", e.Thing.pos);
			e.Thing.Destroy();
		}

		if(clsn == "RLRecallPhaseDevice" || clsn == "RLHomingPhaseDevice" || clsn == "RLPhaseDevice")
		{
			if(random(0, 9) == 0 && Level.Time < 2)
			{
				String it[] = 
				{
					"DRLAX_SmokeBomb",
					"DRLAX_RadarDevice"
				};
				Actor.Spawn(it[random(0, it.Size() - 1)], e.thing.pos);
				e.Thing.Destroy();
			}
		}

		if(clsn == "RLHatredSkull" || clsn == "RLBloodSkull" || clsn == "RLFireSkull")
		{
			if(random(0, 11) == 0 && Level.Time < 2)
			{
				Actor.Spawn("DRLAX_SoulTrap", e.thing.pos);
				e.Thing.Destroy();
			}
		}

		if(!Cvar.GetCvar("DRLAX_nodemonicbosspursuit").GetBool())
		{
			if(clsn == "RLArtifactGuardian" || clsn == "RLNightmareArtifactGuardian" || clsn == "RLAbominantArtifactGuardian")
			{
				DRLAX_ArtifactGuardianHelper g = DRLAX_ArtifactGuardianHelper(Actor.Spawn("DRLAX_ArtifactGuardianHelper"));
				g.target = e.Thing;
			}
		}

		if(clsn == "RLSupplyCrate" && Level.Time < 35)
		{
			ThinkerIterator i = ThinkerIterator.Create("Actor");
			Actor a;
			uint count;
			while(a = Actor(i.Next()))
			{
				if(a.GetClassName() == "RLSupplyCrate")
				{
					count++;
					if(count >= 15)
					{
						e.Thing.Destroy();
						break;
					}
				}
			}
		}
	}

	bool BodySpawned()
	{
		ThinkerIterator i = ThinkerIterator.Create("DRLAX_DeadBody");
		DRLAX_DeadBody c;
		while(c = DRLAX_DeadBody(i.Next()))
		{
			return true;
		}
		
		return false;
	}

	override void NetworkProcess(ConsoleEvent e)
	{        
		Actor player = players[e.player].mo;

		if (e.Name == "DRLAX_ArmorSpecial")
		{
			if(player.health > 0)
			{
				Inventory inv = player.FindInventory("RLArmorSpecial");

				if(inv)
				{
					player.UseInventory(inv);
				}
			}
		}

		if(e.Name == "DRLAX_SargeSpecialOn")
		{
			if(player.CountInv("RLSargeInv") > 0)
			{
				player.GiveInventory("RLSargeInvTrigger", 1);
			}
		}

		if(e.Name == "DRLAX_SargeSpecialOff")
		{
			if(player.CountInv("RLSargeInv") > 0)
			{
				player.TakeInventory("RLSargeInvTrigger", 1);
			}
		}
	}

	override void WorldUnloaded (WorldEvent e) 
	{
		if(!Cvar.GetCvar("DRLAX_nodeathexitprotection").GetBool())
		{
			for(int i; i<players.Size(); i++)
			{
				if(players[i].mo && players[i].mo.health < 1)
				{
					players[i].Resurrect();
					//players[i].mo.health = 100;
				}
			}
		}
	}

	override void WorldThingDied(WorldEvent e)
	{
		if(e.Thing.GetClassName() == "RLSupplyCrate")
        {
			int extraluck;
			
			if(e.Thing.target && e.Thing.target is "DoomRLNomad")
			{
				extraluck = DRLAX_UnlockEvents.GetBeatenLevels();
			}

			if(random(0, 500 - (extraluck * 1.5)) == 0)
			{
				Array<String> fams;
				DRLAX_UnlockFunctions.ParseUnlocks(fams);

				if(fams.Size() > 0)
				{
					DRLAX_FamiliarBall fb = DRLAX_FamiliarBall(Actor.Spawn("DRLAX_FamiliarBall", e.Thing.pos));
					if(fb)
					{
						fb.Init(fams[random(0, fams.Size() - 1)]);
						fb.A_ChangeVelocity(frandom(4, 8), frandom(6, 8), 6);
						e.Thing.A_SpawnItemEx("DRLAX_UniqueCrateSpawn", flags:SXF_NOCHECKPOSITION);
					}
				}
			}

            if(random(0, 25 - (extraluck * 0.25)) == 0)
            {
				Array<String> items;

				items.Push("DRLAX_NanoTape");
				items.Push("DRLAX_SawArm");
				items.Push("DRLAX_CursedDagger");
				items.Push("DRLAX_BarrelCombinerKit");
				items.Push("DRLAX_ParticleColliderKit");
				items.Push("DRLAX_MagneticCoilKit");
				items.Push("DRLAX_QuantumEngineKit");

				DRLAX_QuestManager man = DRLAX_QuestManager.GetQuestMan();

				if(man && man.questscomplete > 0)
				{
					items.Push("DRLAX_LegendaryIdol");
				}

				e.Thing.A_StartSound("items/newitemspawn", CHAN_6, attenuation:0.5);
				e.Thing.A_SpawnItemEx(items[random(0, items.Size() - 1)], 0, 0, 15, frandom(2,4), 0, 6, random(0, 360));
            }
        }
	}
}

class DRLAX_UniqueCrateSpawn : Actor
{
	Default
	{
		+MISSILE;
		+NOINTERACTION;
		-SOLID;
		height 2;
		radius 2;
	}

	states
	{
		Spawn:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("weapons/cratesetspawn", CHAN_WEAPON, 1, 0, 0.4);
		TNT1 AAAAAAAAAAAAAAA 3 A_SpawnItemEx("RLSupplyCrateSmoke", 0, 0, 16);
		stop;
	}

	override void Tick()
	{
		if(target)
		{
			Warp(target, flags:WARPF_NOCHECKPOSITION);
		}
		Super.Tick();
	}
}

Class DRLAX_DeadBody : Actor
{
	Default
	{
		+NOINTERACTION
	}
	
	states
	{
		Spawn:
		TNT1 A 0;
		TNT1 A -1
		{
			Actor a;
			String s;
			String n;

			Switch(random(0, 6))
			{
				Case 0:
				n = "RLPlayerMechanoidDeadBody";
				s = "1337";
				A_SpawnItemEx("RLModPackSpawner", random(16, 32), 0, 0, frandom(1, 4), angle:random(0,360));
				break;

				Case 1:
				n = "RLPlayerNanoManiacDeadBody";
				s = "DKCP";
				SpawnRandomModdedWeapon();
				break;

				Case 2:
				n = "RLPlayerNomadDeadBody";
				s = "ZHRT";
				A_SpawnItemEx("RLClip", random(32, 48), angle:random(0,360));
				A_SpawnItemEx("DRLAX_CursedDagger", random(16, 32), angle:random(0,360));
				break;

				Case 3:
				n = "RLPlayerPhaseSistersDeadBody";
				s = "REVY";
				A_SpawnItemEx("RLRandomPhaseDeviceSpawner", random(32, 48), 0, 0, frandom(1, 4), angle:random(0,360));
				A_SpawnItemEx("RLRandomPhaseDeviceSpawner", random(32, 48), 0, 0, frandom(1, 4), angle:random(0,360));
				A_SpawnItemEx("RLRandomPhaseDeviceSpawner", random(32, 48), 0, 0, frandom(1, 4), angle:random(0,360));
				break;

				Case 4:
				n = "RLPlayerSargeDeadBody";
				s = "SUT1";
				A_SpawnItemEx("RLRocketLauncherPickup", random(32, 48), angle:random(0,360));
				A_SpawnItemEx("DRPGBackpackRandomizer", random(32, 48), angle:random(0,360));
				break;

				Case 5:
				n = "RLPlayerTrespasserDeadBody";
				s = "TRES";
				A_SpawnItemEx("DRLAX_SmokeBomb", random(16, 32), angle:random(0,360));
				A_SpawnItemEx("DRLAX_SmokeBomb", random(16, 32), angle:random(0,360));
				break;

				Case 6:
				n = "RLPlayerBunkerDeadBody";
				s = "BUNK";
				A_SpawnItemEx("RLChaingunSpawner", random(32, 48), angle:random(0,360));
				A_SpawnItemEx("RLCellPack", random(32, 48), angle:random(0,360));
				break;
			}

			if(!s || !n)
			{
				return;
			}

			a = Actor(Spawn(n, pos));
			a.frame = 13;
			a.sprite = GetSpriteIndex(s);
		}
		stop;
	}

	void SpawnRandomModdedWeapon()
	{
		int mods = 1;
				int emods = random(0, 1);
				String weps[] = 
				{
					"RLPistolPickupModded",
					"RLShotgunPickupModded",
					"RLCombatShotgunPickupModded",
					"RLDoubleShotgunPickupModded",
					"RLChaingunPickupModded",
					"RLBattleRiflePickupModded",
					"RLRocketLauncherPickupModded",
					"RLPlasmaRiflePickupModded",
					"RLBFG9000PickupModded"
				};

				String rmodsarray[] = 
				{
					"BulkMod",
					"PowerMod",
					"AgilityMod",
					"TechnicalMod"				
				};

				String emodsarray[] =
				{
					"NanoMod",
					"FirestormMod",
					"SniperMod"
				};

				String chosen = weps[random(0, weps.Size()-1)];

				bool spawned;
            	Actor act;
				[spawned, act] = A_SpawnItemEx(chosen, random(16, 32), angle:random(0,360), flags:SXF_NOCHECKPOSITION);

				String wepname = chosen;
				wepname.Replace("PickupModded", "");

				if(spawned && act)
				{
					for(int i; i<mods; i++)
					{
						act.GiveInventory(wepname .. "ModLimit", 1);

						if(emods > 0)
						{
							act.GiveInventory(wepname .. emodsarray[random(0, emodsarray.Size()-1)], 1);
							emods--;
							continue;
						}

						act.GiveInventory(wepname .. rmodsarray[random(0, rmodsarray.Size()-1)], 1);
					}
				}
	}
}


class DRLAX_ArtifactGuardianHelper : Actor
{
	Default
	{
		+NOINTERACTION;
	}

	States
	{
		Spawn:
		TNT1 A -1;
		stop;
	}

	int rangecooldown;

	override void Tick()
	{
		if(!target || target.health < 1)
		{
			Destroy();
			return;
		}

		if(!target.target)
		{
			target.target = GetRandomPlayer();
			target.lastheard = GetRandomPlayer();
		}

		if(rangecooldown == 0)
		{
			rangecooldown = 35*10;
			//Console.Printf("finding new home");
			FindNewHome();
		}

		if(target.target)
		{
			if(target.Distance2D(target.target) > 600 && !target.CheckSight(target.target, SF_IGNOREVISIBILITY))
			{
				rangecooldown--;
			}
			else
			{
				rangecooldown++;
			}
		}

		rangecooldown = Clamp(rangecooldown, 0, 35*10);

		//Console.Printf("".. rangecooldown);

		Super.Tick();
	}

	CMMSS_Actor_SafeSpawner cb;

	void FindNewHome()
	{
		if(cb)
		{
			return;
		}

		cb = CMMSS_Safespawner.New("DRLAX_ArtifactGuardianTeleport", 1, "", target.radius, target.height, 0, CMMSS_Safespawner.SSFLAGS_IGNOREPLAYERSIGHT);
		cb.SetSpawnLocation(GetRandomPlayer());
	}

	Actor GetRandomPlayer()
	{
		Array<Actor> ps;

		for(int i; i<players.Size(); i++)
		{
			if(players[i].mo)
			{
				ps.Push(players[i].mo);
			}
		}

		if(ps.Size() == 0)
		{
			return null;
		}

		return ps[random(0, ps.Size() - 1)];
	}

	override void PostBeginPlay()
	{
		rangecooldown = 35*5;
	}
}

class DRLAX_ArtifactGuardianTeleport : Actor
{
	Default
	{
		+NOINTERACTION;
		-SOLID;
	}

	States
	{
		Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("RLDemonicBossTeleportFogMain", 0, 0, 64, flags:SXF_NOCHECKPOSITION);
		TNT1 AAAA 7 A_StartSound("misc/teleport", flags:CHANF_OVERLAP, attenuation: 0.5);
		TNT1 AAA 7;
		TNT1 A 50
		{
			ThinkerIterator i = ThinkerIterator.Create("DRLAX_ArtifactGuardianHelper");
			DRLAX_ArtifactGuardianHelper c;
			if(c = DRLAX_ArtifactGuardianHelper(i.Next()))
			{
				if(c.target)
				{
					Spawn("TeleportFog", c.pos + (0,0,c.target.height/2));
					c.Target.SetOrigin(pos, false);
					if(c.target.GetAge() > 100)
					{
						c.target.A_StartSound(c.target.seesound, slot:CHAN_7, attenuation:ATTN_NONE);
						return;
					}
				}
			}
		}
		stop;
	}
}


class DRLAX_Debug : Inventory
{
}

Class DRLAX_RogueExplosion : Actor
{
    Default
    {
        PROJECTILE;
        +BRIGHT;
        +THRUACTORS;
        Renderstyle "Add";
        Alpha 0.8;
        damagetype "Bullet";
        +ALLOWPARTICLES;
        radius 2;
        height 2;
        renderstyle "STYLE_Add";
        Translation "192:207=208:223", "0:0=232:235";
    }

    int dmg;

    states
    {
        Spawn:
        TNT1 A 3;
        TNT1 A 0 {
            DRLAX_RogueExplosionFX fx = DRLAX_RogueExplosionFX(Spawn("DRLAX_RogueExplosionFX", pos));
            
            if(CallACS("DRLA_QuakeNShake"))
            {
                A_Quake(2, 8, 0, 400, "");
                A_Quake(4, 8, 0, 200, "");
            }
            int rad = Min(128 + dmg, 512);
            A_SetScale(0.5 + (rad * 0.008), 0.5 + (rad * 0.008));
            fx.sizespeed = rad * 0.001;
            A_Explode(dmg, rad, 0, false, rad);

            for(int i; i<17; i++)
            {
                A_SpawnItemEx("RLRocketShrapnel", 0, 0, 0, frandom(-5.0,5.0), frandom(-5.0,5.0), frandom(-5.0,5.0), frandom(0.0,360.0),0,58);
                A_SpawnItemEx("RLBulletPuffShrapnel", 0, 0, 0, frandom(-5.0,5.0), frandom(-5.0,5.0), frandom(-5.0,5.0), frandom(0.0,360.0),0,58);
            }
        }
        MICX ABCDEFGH 2 A_FadeOut(0.01);
        Stop;
    }
}

Class DRLAX_RogueExplosionFX : Actor
{
	Default
	{
		+FLATSPRITE;
		Scale 0.20;
		+BRIGHT;
		renderstyle "STYLE_Add";
        +NOINTERACTION;
        -FLOORCLIP;
        -SOLID
	}

    float sizespeed;

	states
	{
	Spawn:
    TNT1 A 0;
    TNT1 A 0 A_StartSound("sharpshooter/passive", attenuation:0.5);
    Stretch:
    FPUF A 1
	{
		A_SetScale(scale.x + 0.12 + sizespeed, scale.y + 0.12 + sizespeed);
		A_FadeOut(0.06);
	}
    Loop;
	}
}

class DRLAX_ShavedArms : Inventory
{
	Default
	{
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.UNTOSSABLE;
	}
}

Class DRLAX_DebrisFX : Actor
{
	Default
	{
		damage 0;
		//+MISSILE;
		+THRUACTORS;
		gravity 2.0;
		scale 0.62;
	}

	States
	{
		Spawn:
		TNT1 "#" 0;
		TNT1 "#" 0
		{
			if(random(0,1) == 0)
			{
				SetStateLabel("Alt");
			}
		}
		RSH2 "#" 0 A_SetTics(random(5, 10) * 35);
		Goto Death;
		Alt:
		RSH3 "#" 0 A_SetTics(random(5, 10) * 35);
		Goto Death;
		Death:
		"####" "#" 1 A_FadeOut(0.01);
		stop;
	}

	override void PostBeginPlay()
	{
		frame = random(0, 3);
	}

	static void Spawn(Actor a, int amount)
	{
		for(int i = 0; i<amount; i++)
		{
			if(a)
			{
				a.A_SpawnItemEx("DRLAX_DebrisFX", 0, 0, (a.height/2) + random(0, 8), frandom(3, 8), 0, frandom(5, 10), random(0,360), SXF_NOCHECKPOSITION);
			}
		}
	}
}